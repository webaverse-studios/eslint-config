name: Node.js Package

on:
  release:
    types: [created]

  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn --frozen-lockfile

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/

      - run: yarn --frozen-lockfile

      # - name: get-npm-version
      #   id: package-version
      #   uses: martinbeentjes/npm-get-version-action@main

      # - name: Tag
      #   id: autotagger
      #   uses: phish108/autotag-action@1.1.53
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      #   with:
      #     tag: v${{ steps.package-version.outputs.current-version}}

      # - name: Release
      #   id: create_release
      #   if: steps.autotagger.outputs.tagname != ''
      #   uses: softprops/action-gh-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     draft: false
      #     prerelease: true
      #     body: ${{ steps.autotagger.outputs.tagmessage }}
      #     tag_name: ${{ steps.autotagger.outputs.tagname }}
      #     name: Version ${{ steps.autotagger.outputs.version }}

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          # Using a known release ID
          id: ${{ steps.create_release.id }}
          # Using a tag name
          tag: ${{ steps.autotagger.outputs.tagname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
